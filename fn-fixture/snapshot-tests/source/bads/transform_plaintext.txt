fn do_thing<T: std::fmt::Debug>(
    mut input: (impl std::ops::Fn(&mut std::option::Option<T>)
                    + std::panic::RefUnwindSafe
                    + std::panic::UnwindSafe,
                &'static str,
                &'static str),
) {
    fn do_thing<T: std::fmt::Debug>(input: T) -> T {
        input
    }
    let (to_call, (provider, expected_file, actual_file)) = (&do_thing, input);
    let result = format!(
        "{:#?}\n",
        std::panic::catch_unwind(move || {
            let mut temp = std::option::Option::None;
            provider(&mut temp);
            to_call(temp.unwrap())
        }).map_err(|err| {
            err.downcast::<String>()
                .or_else(|err| if let Some(string) = err.downcast_ref::<&str>() {
                    std::result::Result::Ok(std::boxed::Box::new(string.to_string()))
                } else {
                    std::result::Result::Err(("<!String> Panic", err))
                })
                .map(|ok| ("<String> Panic", ok))
        })
    );
    if std::path::Path::new(expected_file).is_file() {
        let expected = std::fs::read_to_string(expected_file).unwrap_or_else(|err| {
            panic!("Reading expected from {}: {:?}", expected_file, err)
        });
        assert_eq!(result, expected)
    } else {
        std::fs::write(actual_file, result.as_bytes())
            .unwrap_or_else(|err| panic!("Writing actual to {}: {:?}", actual_file, err));
        panic!("No expected value set: {}", actual_file)
    }
}
mod do_thing {
    compile_error ! { "Failed to convert filename of \"./snapshot-tests/bad/bad-id\" into rust identifier: Err(Error(\"unexpected token\"))" }
    mod multi_input_00 {
        compile_error ! { "Expected sub-directories or exactly one of input.rs, input.bin, or input.txt in \"./snapshot-tests/bad/multi_input_00\"" }
    }
    mod multi_input_01 {
        compile_error ! { "Expected sub-directories or exactly one of input.rs, input.bin, or input.txt in \"./snapshot-tests/bad/multi_input_01\"" }
    }
    mod multi_input_02 {
        compile_error ! { "Expected sub-directories or exactly one of input.rs, input.bin, or input.txt in \"./snapshot-tests/bad/multi_input_02\"" }
    }
    mod multi_input_03 {
        compile_error ! { "Expected sub-directories or exactly one of input.rs, input.bin, or input.txt in \"./snapshot-tests/bad/multi_input_03\"" }
    }
    mod no_input {
        compile_error ! { "Expected sub-directories or exactly one of input.rs, input.bin, or input.txt in \"./snapshot-tests/bad/no_input\"" }
    }
}
